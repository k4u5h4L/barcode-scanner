{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAY5C,MAAM,OAAO,iBACX,SAAQ,SAAS;IAEjB,KAAK,CAAC,OAAO;QACX,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,QAAqB;QACnC,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,QAAqB,EAAE,SAAc;QACvD,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,QAA0B;QACvC,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,eAAe,CACnB,QAAgC;QAEhC,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACtD,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  BarcodeScannerPlugin,\n  ScanOptions,\n  ScanResult,\n  CheckPermissionOptions,\n  CheckPermissionResult,\n  StopScanOptions,\n  TorchStateResult,\n} from './definitions';\n\nexport class BarcodeScannerWeb\n  extends WebPlugin\n  implements BarcodeScannerPlugin {\n  async prepare(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async hideBackground(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async showBackground(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async startScan(_options: ScanOptions): Promise<ScanResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async startScanning(_options: ScanOptions, _callback: any): Promise<string> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async pauseScanning(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async resumeScanning(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async stopScan(_options?: StopScanOptions): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async checkPermission(\n    _options: CheckPermissionOptions,\n  ): Promise<CheckPermissionResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async openAppSettings(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async disableTorch(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async enableTorch(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async toggleTorch(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getTorchState(): Promise<TorchStateResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n"]}